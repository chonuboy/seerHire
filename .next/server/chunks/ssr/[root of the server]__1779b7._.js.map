{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/knant/Downloads/contacts-tracker%20%281%29/contacts-tracker/client/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/knant/Downloads/contacts-tracker%20%281%29/contacts-tracker/client/src/Features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n  user: null | { id: string; email: string; role: string };\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action: PayloadAction<{ user: any }>) {\r\n      state.user = action.payload.user;\r\n      state.isAuthenticated = true;\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user)); // Store user in localStorage\r\n    },\r\n    logout(state) {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem('user'); // Clear user from localStorage\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;"],"names":[],"mappings":";;;;;AAAA;;;;;;AAOA,MAAM,eAA0B;IAC9B,MAAM;IACN,iBAAiB;AACnB;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAM,KAAK,EAAE,MAAoC;YAC/C,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,eAAe,GAAG;YACxB,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO,OAAO,CAAC,IAAI,IAAI,6BAA6B;QAClG;QACA,QAAO,KAAK;YACV,MAAM,IAAI,GAAG;YACb,MAAM,eAAe,GAAG;YACxB,aAAa,UAAU,CAAC,SAAS,+BAA+B;QAClE;IACF;AACF;AAEO,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,UAAU,OAAO;uCACnC,UAAU,OAAO"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/knant/Downloads/contacts-tracker%20%281%29/contacts-tracker/client/src/Features/Store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './auth/authSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n    },\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAGO,MAAM,QAAQ,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,SAAS;QACL,MAAM,6HAAA,CAAA,UAAW;IACrB;AACJ"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/knant/Downloads/contacts-tracker%20%281%29/contacts-tracker/client/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\nimport { ToastContainer } from \"react-toastify\";\nimport { store } from \"@/Features/Store\";\nimport usePersistAuth from \"@/Features/userPersist\";\nimport { Provider } from \"react-redux\";\nexport default function App({ Component, pageProps }: AppProps) {\n\n  usePersistAuth();\n  return (\n    <div>\n      <Provider store={store}>\n        <Component {...pageProps} />\n        <ToastContainer />\n      </Provider>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AACe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAE5D,CAAA,GAAA,uHAAA,CAAA,UAAc,AAAD;IACb,qBACE,qKAAC;kBACC,cAAA,qKAAC,4HAAA,CAAA,WAAQ;YAAC,OAAO,iHAAA,CAAA,QAAK;;8BACpB,qKAAC;oBAAW,GAAG,SAAS;;;;;;8BACxB,qKAAC,kIAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;AAIvB"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}